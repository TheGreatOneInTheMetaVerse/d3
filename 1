def deposit(self, amount):
    if amount > 0:
        self.balance += amount
        self.transactions.append(f"Deposited {amount} coins.")
    else:
        print("Invalid deposit amount.")

def withdraw(self, amount):
    if 0 < amount <= self.balance:
        self.balance -= amount
        self.transactions.append(f"Withdrew {amount} coins.")
    else:
        print("Insufficient funds or invalid withdrawal amount.")

def get_balance(self):
    return self.balance

def get_transactions(self):
    return self.transactionsdef deposit(self, amount):
    if amount > 0:
        self.balance += amount
        self.transactions.append(f"Deposited {amount} coins.")
    else:
        print("Invalid deposit amount.")

def withdraw(self, amount):
    if 0 < amount <= self.balance:
        self.balance -= amount
        self.transactions.append(f"Withdrew {amount} coins.")
    else:
        print("Insufficient funds or invalid withdrawal amount.")

def get_balance(self):
    return self.balance

def get_transactions(self):
    return self.transactionsdef deposit(self, amount):
    if amount > 0:
        self.balance += amount
        self.transactions.append(f"Deposited {amount} coins.")
    else:
        print("Invalid deposit amount.")

def withdraw(self, amount):
    if 0 < amount <= self.balance:
        self.balance -= amount
        self.transactions.append(f"Withdrew {amount} coins.")
    else:
        print("Insufficient funds or invalid withdrawal amount.")

def get_balance(self):
    return self.balance

def get_transactions(self):
    return self.transactionsdef deposit(self, amount):
    if amount > 0:
        self.balance += amount
        self.transactions.append(f"Deposited {amount} coins.")
    else:
        print("Invalid deposit amount.")

def withdraw(self, amount):
    if 0 < amount <= self.balance:
        self.balance -= amount
        self.transactions.append(f"Withdrew {amount} coins.")
    else:
        print("Insufficient funds or invalid withdrawal amount.")

def get_balance(self):
    return self.balance

def get_transactions(self):
    return self.transactions
